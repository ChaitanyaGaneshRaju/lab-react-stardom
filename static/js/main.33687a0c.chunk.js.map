{"version":3,"sources":["Styled Components/Header.jsx","Styled Components/Buttons.jsx","Components/Stardom.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","Button","button","props","primary","css","sortByName","sortByPopularity","delete","Division","Table","table","Stardom","getRandomProStar","length","prostars","random","Math","round","randomStar","array","state","push","setState","removeProStar","name","index","filter","prostar","map","indexOf","splice","displayProstars","proStar","src","pictureUrl","alt","popularity","onClick","sort","prostar1","prostar2","slice","this","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,EAASC,IAAOC,IAAV,mHCANC,EAAOF,IAAOG,OAAR,iGAIjB,SAAAC,GAAK,OAAIA,EAAMC,SAAWC,YAAjB,4DAKP,SAAAF,GAAK,OAAEA,EAAMG,YAAYD,YAAlB,+DAMP,SAAAF,GAAK,OAAEA,EAAMI,kBAAkBF,YAAxB,+DAKP,SAAAF,GAAK,OAAEA,EAAMK,QAAQH,YAAd,8D,cCfLI,EAAWV,IAAOC,IAAV,kHAQRU,EAAQX,IAAOY,MAAV,iRA8IIC,E,kDA3Hb,aAAe,IAAD,8BACZ,gBAQFC,iBAAiB,WAEf,IAAMC,EAAO,YAAIC,GAAUD,OAErBE,EAAOC,KAAKC,MAAMD,KAAKD,SAASF,GAEhCK,EAAW,YAAIJ,GAAUC,GAGzBI,EAAM,EAAKC,MAAMN,SAGvBK,EAAME,KAAKH,GAGX,EAAKI,SAAS,CAACR,SAASK,KAxBZ,EA2BdI,cAAc,SAACC,GAEb,IAAIL,EAAM,EAAKC,MAAMN,SAGfW,EAAMN,EAAMO,QAAO,SAAAC,GACvB,OAAOA,EAAQH,OAAOA,KACrBI,KAAI,SAAAD,GACL,OAAOR,EAAMU,QAAQF,MAIpBF,GAAO,GACRN,EAAMW,OAAOL,EAAM,GAIrB,EAAKH,SAAS,CAACR,SAASK,KA5CZ,EA+CdY,gBAAkB,WAChB,OAAO,EAAKX,MAAMN,SAASc,KAAI,SAACI,GAC9B,OACI,+BACE,6BACE,qBACEC,IAAKD,EAAQE,WACbC,IAAI,OAGR,6BAAKH,EAAQR,OACb,6BAAKQ,EAAQI,aACb,6BACE,cAACpC,EAAD,CAAQO,QAAM,EAAC8B,QAAS,kBAAI,EAAKd,cAAcS,EAAQR,OAAvD,6BA5DE,EAmEdnB,WAAW,WAET,IAAIc,EAAM,EAAKC,MAAMN,SAGrBK,EAAMmB,MAAK,SAACC,EAASC,GACnB,OAAOD,EAASf,KAAOgB,EAAShB,QAGlC,EAAKF,SAAS,CAACR,SAASK,KA5EZ,EA+Edb,iBAAiB,WAEf,IAAIa,EAAM,EAAKC,MAAMN,SAGrBK,EAAMmB,MAAK,SAACC,EAASC,GACnB,OAAOD,EAASH,WAAaI,EAASJ,cAGxC,EAAKd,SAAS,CAACR,SAASK,KAtFxB,EAAKC,MAAQ,CAEXN,SAAU,YAAIA,GAAU2B,MAAM,EAAE,IAJtB,E,0CA2Fd,WAAU,IAAD,OACP,OACE,gCACE,cAAC5C,EAAD,sBACA,eAACW,EAAD,WACE,gCACE,cAACR,EAAD,CAAQG,SAAO,EAACkC,QAAS,kBAAM,EAAKzB,oBAApC,6BAGA,cAACZ,EAAD,CAAQK,YAAU,EAACgC,QAAS,kBAAI,EAAKhC,cAArC,0BACA,cAACL,EAAD,CAAQM,kBAAgB,EAAC+B,QAAS,kBAAI,EAAK/B,oBAA3C,mCAEF,eAACG,EAAD,WACE,gCACE,+BACE,yCACA,sCACA,4CACA,6CAGJ,gCACCiC,KAAKX,iC,GAlHIY,aCvBPC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.33687a0c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Header = styled.div`\n  background-color: black;\n  color: white;\n  font-size: 3em;\n  text-align: center;\n`;\n","import styled,{css} from 'styled-components';\n\nexport const Button=styled.button`\ncolor: white;\nborder:none;\ncursor: pointer;\n${props => props.primary && css`\n    background: blue;\n      `\n}\n${\n    props=>props.sortByName&&css`\n    background-color:grey;\n    `\n}\n\n${\n    props=>props.sortByPopularity&&css`\n    background-color:aqua;\n    `\n}\n${\n    props=>props.delete&&css`\n    background-color:red;\n    `\n}\n`","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"../Styled Components/Header\";\nimport { Button } from \"../Styled Components/Buttons\";\nimport prostars from \"../prostar.json\";\n\n//Division as Container to hold buttons and table\nconst Division = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1em;\n`;\n\n//table and having its style, background white, border black\nconst Table = styled.table`\n  caption-side: top;\n  background-color: white;\n  border-collapse: collapse;\n  width: 50%;\n  td,\n  th {\n    text-align: center;\n    border: 1px solid black;\n  }\n  td {\n    padding: 5px 5px;\n    img {\n      width: 100px;\n    }\n  }\n`;\n\nclass Stardom extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //Initially fetching the top 5 prostars\n      prostars: [...prostars].slice(0,5),\n    };\n  }\n\n  //fetching the random prostar\n  getRandomProStar=()=>{\n    //finding out the length of the prostars array \n    const length=[...prostars].length;\n    //getting a random number and using it as the index to get a random prostar\n    const random=Math.round(Math.random()*length)\n    //getting random prostar\n    const randomStar=[...prostars][random];\n\n    //holding the prostar of this state into the array\n    const array=this.state.prostars;\n\n    //pushing the random prostar into the prostars of this state\n    array.push(randomStar)\n\n    //change the prostars of the state with the pushed random one\n    this.setState({prostars:array})\n  }\n\n  removeProStar=(name)=>{\n    //holding the prostars of the state into the temporary array\n    let array=this.state.prostars\n\n    //finding the index of the currently pressed prostar\n    const index=array.filter(prostar=>{\n      return prostar.name===name\n    }).map(prostar=>{\n      return array.indexOf(prostar)\n    })\n\n    //if the index is greater than 1 remove the prostar from the array\n    if(index>-1){\n      array.splice(index,1)\n    }\n\n    //update the array to the state\n    this.setState({prostars:array})\n  }\n\n  displayProstars = () => {\n    return this.state.prostars.map((proStar) => {\n      return (\n          <tr>\n            <td>\n              <img\n                src={proStar.pictureUrl}\n                alt=\"\"\n              />\n            </td>\n            <td>{proStar.name}</td>\n            <td>{proStar.popularity}</td>\n            <td>\n              <Button delete onClick={()=>this.removeProStar(proStar.name)}>Delete</Button>\n            </td>\n          </tr>\n      );\n    });\n  };\n\n  sortByName=()=>{\n    //holding the state prostars into the temporary array\n    let array=this.state.prostars;\n\n    //sorting the prostars based on their names\n    array.sort((prostar1,prostar2)=>{\n      return prostar1.name > prostar2.name\n    })\n    //changing the state\n    this.setState({prostars:array})\n  }\n\n  sortByPopularity=()=>{\n    //holding the state prostars into the temporary array\n    let array=this.state.prostars;\n\n    //sorting the prostars based on their names\n    array.sort((prostar1,prostar2)=>{\n      return prostar1.popularity > prostar2.popularity\n    })\n    //changing the state\n    this.setState({prostars:array})\n  }\n\n  render() {\n    return (\n      <div>\n        <Header>ProStar</Header>\n        <Division>\n          <div>\n            <Button primary onClick={() => this.getRandomProStar()}>\n              Get Random star\n            </Button>\n            <Button sortByName onClick={()=>this.sortByName()}>Sort By Name</Button>\n            <Button sortByPopularity onClick={()=>this.sortByPopularity()}>Sort By Popularity</Button>\n          </div>\n          <Table>\n            <thead>\n              <tr>\n                <th>Picture</th>\n                <th>Name</th>\n                <th>Popularity</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.displayProstars()}\n            </tbody>\n\n          </Table>\n        </Division>\n      </div>\n    );\n  }\n}\n\nexport default Stardom;\n","import Stradom from './Components/Stardom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stradom/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}